@model ExamMvc.Web.Models.TicketDetailsModel

@{
    ViewBag.Title = "Details";  
}

<h1>Ticketing System </h1>

<div class="row">
    <div><h2>Category:@Model.CategoryName</h2> </div>
    <div class="span4"> 
        <div><strong>Author:</strong> @Model.AuthorName</div>
        <div><strong>Priority:</strong> @Model.Priority</div>
    </div>
    @if (!string.IsNullOrEmpty(Model.ScreenshotUrl))
    {
        <div class="span4">
            <img src="@Model.ScreenshotUrl" alt="@Model.ScreenshotUrl" />
        </div>
    }
    <div class="span4">

        @if (!string.IsNullOrEmpty(Model.Description))
        { <div><strong>Description: </strong> @Model.Description</div> }
    </div>
</div>

<div id="Comments">
    @for (int i = 0; i < Model.Comments.Count(); i++)
    { 
        var comment = Model.Comments.ElementAt(i);
        <p><strong>@comment.AuthorUsername : </strong> @comment.Content</p>
    }
</div>

@if (User.Identity.IsAuthenticated)
{
    using (Ajax.BeginForm("PostComment", new AjaxOptions { 
        HttpMethod = "Post", InsertionMode = InsertionMode.InsertAfter, 
        UpdateTargetId = "Comments", OnFailure = "commentPostFailure", OnSuccess = "commentOnSuccess" }))
    {
        @Html.Hidden("TicketId", Model.Id)
        @Html.TextArea("Comment", new { id = "new-comment" })
        @Html.AntiForgeryToken()
        <br/>
        <input type="submit" value="Submit comment" />
    }
}

@section scripts{
    <script>
        function commentPostFailure() {
            alert("Error");
        }
        function commentOnSuccess() {
            $("#new-comment").val("");
        }
    </script>
}